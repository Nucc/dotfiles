set-option -sa terminal-overrides ",xterm*:Tc"

unbind r
bind r source-file ~/.tmux.conf

set -g prefix C-Space
bind C-Space send-prefix

set -sg escape-time 0
set -g mouse on

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'aserowy/tmux.nvim'
set -g @plugin 'thuantanphamfilms/tmux-fzf-session-switch'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @resurrect-strategy-nvim 'session'
set -g @continuum-save-interval '5'  # Save every 5 minutes
set -g @continuum-restore 'on'        # Restore last session on startup

set -g status-position top
set -g base-index 1
set -g pane-base-index 1
set -g status-bg "#292929"
set -g status-right " "
set -g status-left " "
set -g window-status-format "#[fg=#292929,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#I |#[fg=white,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#W #F #[fg=brightblack,bg=#292929,nobold,noitalics,nounderscore]"
set -g window-status-current-format "#[fg=black,bg=yellow,nobold,noitalics,nounderscore] #[fg=black,bg=yellow]#I |#[fg=black,bg=yellow,nobold,noitalics,nounderscore] #[fg=black,bg=yellow]#W #F #[fg=cyan,bg=black,nobold,noitalics,nounderscore]"
set -g window-status-separator " "
set -g status-justify centre
set -g status-left ' #[fg=#A3BE8C][  #($HOME/.dotfiles/scripts/git-branch.sh #{pane_current_path}) ]#[fg=#D8DEE9]'
set -g status-right ' #[fg=#A3BE8C][   #($HOME/.dotfiles/scripts/short-path.sh #{pane_current_path}) ]#[fg=#D8DEE9]'
set -g pane-active-border-style fg=yellow
set -g pane-border-style fg=darkgray
set -g status-right-length 70
set -g status-left-length 40
set -g status-interval 5

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
unbind -T copy-mode-vi MouseDragEnd1Pane 

set -g @fzf-goto-session 'space'
set -g @fzf-goto-win-width 70
set -g @fzf-goto-win-height 25

# bind -n C-S-Up copy-mode \; send-keys -X page-up 
# bind -n C-S-Down copy-mode \; send-keys -X page-down 

bind-key -n 􀄇 if-shell '[ "#{pane_current_command}" != "nvim" ]' 'copy-mode; send-keys -X page-up' 'send-keys 􀄇' # CMD-Shift-Up
bind-key -n 􀄈 if-shell '[ "#{pane_current_command}" != "nvim" ]' 'copy-mode; send-keys -X page-down' 'send-keys 􀄈' # Cmd-Shift-Down

set-option -g status on

bind s set-option -g status

# Bind Cmd-Right to End-of-Line
bind -n M-Right send-keys End
bind -n M-Left send-keys Home
bind -Tcopy-mode C-o send -X search-backward "$ "

bind -n 􀑣 previous-window       # Cmd-Ctrl-Shift-{
bind -n 􀑥 next-window           # Cmd-Ctrl-Shift-}
bind -n 􀐻 set-option -g status  # Cmd-Ctrl-Shift-S

bind -n 􀑤 switch-client -n      # Cmd-Ctrl-Shift-|
bind -n 􀓝 switch-client -p      # Cmd-Ctrl-Shift-PageDown
bind -n 􀐿 choose-tree -w        # Cmd-Ctrl-Shift-W 
bind -n 􀐼 new-window            # Cmd-Ctrl-Shift-' 
bind -n 􀐊 split-window -h -c "#{pane_current_path}"      # Cmd-Ctrl-Shift-; 
bind -n 􀐢 split-window -v -c "#{pane_current_path}"       # Cmd-Ctrl-Shift-" 
bind -n 􀐸 last-window           # Cmd-Ctrl-Shift-P 
bind -n C-\\ last-pane           # Ctrl-\\
bind -n 􀑁 run-shell '~/.dotfiles/scripts/tmux-renumber-windows.sh' # Cmd-Ctrl-Shift-Y
bind -Tcopy-mode-vi 􀁣 send-keys -X copy-selection \; send-keys -X cancel # Cmd-C
bind -n 􀐪 run-shell "tmux send-keys -l -- $(git symbolic-ref --short HEAD)" # Cmd-Ctrl-Shift-b
bind -n 􀁐 send-keys C-r # CMD-SHIFT-P
bind -n C-p run-shell "tmux set-buffer \"$(fzf --preview 'bat --style=numbers --color=always --line-range :500 {} 2>/dev/null' --height 40%)\"; tmux paste-buffer"
bind -n 􀁏 send-keys "nvim ." C-m #Cmd-shift-o
bind-key -n 􀁏 if-shell '[ "#{pane_current_command}" != "nvim" ]' 'send-keys "nvim ." C-m' 'send-keys 􀁏' # Cmd-Shift-o
bind-key -n 􀁰 if-shell '[ "#{pane_current_command}" != "nvim" ]' 'send-keys "fzf_change_directory" C-m' 'send-keys 􀁰' # Cmd-Shift-o
bind-key -n 􀢱 if-shell '[ "#{pane_current_command}" != "nvim" ]' 'send-keys "cd_back" C-m' 'send-keys 􀢱' # Alt-Cmd-left
bind-key -n 􀢲 if-shell '[ "#{pane_current_command}" != "nvim" ]' 'send-keys "cd_forward" C-m' 'send-keys 􀢲' # Alt-Cmd-right

bind -n 􀑂 resize-pane -Z        # Cmd-Ctrl-Shift-Z
# bind-key -n 􀃉 command-prompt -p
bind -n 􀐶 new-window # Cmd-Ctrl-Shift-N
bind -n 􀐴 send-keys C-l # Cmd-Ctrl-Shift-L 
# bind -n 􀄇 copy-mode \; send-keys -X page-up
# bind -n 􀄈 copy-mode \; send-keys -X page-down
bind-key -n 􀁐 if-shell '[ "#{pane_current_command}" != "nvim" ]' 'send-keys C-r' 'send-keys 􀁐' # Cmd-Shift-P


bind -n 􀀱 select-window -t :1 # Cmd-1
bind -n 􀀲 select-window -t :2 # Cmd-2
bind -n 􀀳 select-window -t :3 # Cmd-3
bind -n 􀀴 select-window -t :4 # Cmd-4
bind -n 􀀵 select-window -t :5 # Cmd-5
bind -n 􀀶 select-window -t :6 # Cmd-6
bind -n 􀀷 select-window -t :7 # Cmd-7
bind -n 􀀸 select-window -t :8 # Cmd-8
bind -n 􀀹 select-window -t :9 # Cmd-9
bind -n 􀀰 select-window -t :10 # Cmd-0

bind -n 􀓠 run-shell "if [[ -z \$(ls -lO $HOME/Desktop | grep hidden) ]]; then chflags hidden $HOME/Desktop/*; else chflags nohidden $HOME/Desktop/*; fi && osascript -e 'tell application \"Finder\" to update desktop' &> /dev/null || true"

bind -n 􀓯 {
  copy-mode
  send -X clear-selection
  send -X start-of-line
  send -X start-of-line
  send -X cursor-up
  send -X cursor-up
  send -X start-of-line
  send -X start-of-line

  if -F "#{m:*$ ,#{copy_cursor_line}}" {
    send -X search-forward-text "\$ "
    send -X stop-selection
    send -X -N 2 cursor-right
    send -X begin-selection
    send -X end-of-line
    send -X end-of-line
    if "#{m:*\$ *,#{copy_cursor_line}}" {
      send -X cursor-left
    }
  } {
    send -X end-of-line
    send -X end-of-line
    send -X begin-selection
    send -X search-backward-text "\$ "
    send -X end-of-line
    send -X end-of-line
    send -X cursor-right
    send -X stop-selection
  }
} # Cmd-Ctrl-Shift-Up

bind -n 􀁷 run-shell ' \
  current_cmd=$(tmux display-message -p "#{pane_current_command}"); \
  if [ "$current_cmd" = "nvim" ]; then \
    tmux send-keys 􀁷; \
  else \
    if [ "$(tmux list-panes -F "#{pane_id}" | wc -l)" -gt 1 ]; then \
      tmux kill-pane; \
    else \
      if [ "$(tmux list-windows -F "#{window_id}" | wc -l)" -eq 1 ]; then \
          OLD_WIN=$(tmux display-message -p "#{window_id}"); \
          tmux switch-client -p; \
          sleep 0.1; \
          tmux kill-window -t "$OLD_WIN"; \
        else \
          tmux kill-window; \
        fi; \
    fi; \
  fi'

run '~/.tmux/plugins/tpm/tpm'
